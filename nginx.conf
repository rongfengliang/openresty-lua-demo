worker_processes  1;
events {
    worker_connections  1024;
}
http {
    include       mime.types;
    default_type  application/octet-stream;
    sendfile        on;
    keepalive_timeout  65;
    lua_code_cache off;
    gzip  on;
    real_ip_header     X-Forwarded-For;
    real_ip_recursive on;
    lua_package_path '/opt/app/?.lua;;';
    lua_shared_dict cache_dict 10m;
    init_by_lua_block {
        local mlcache = require "resty.mlcache"
        local cache, err = mlcache.new("my_cache", "cache_dict", {
            lru_size = 500,    -- size of the L1 (Lua VM) cache
            ttl      = 6,   -- 1h ttl for hits
            neg_ttl  = 30,     -- 30s ttl for misses
        })
        if err then

        end
        _G.cache = cache
    }
    server {
        listen       80;
        server_name  localhost;
        charset utf-8;
        root html;
        default_type text/html;
        location / {
           content_by_lua_block {
            require("html/app")()
          }
        }
        location /cache {
          more_set_headers  'Content-Type application/json';
          content_by_lua_block {
                require("cache/init")()
            }

        }
        location /jsonnet {
          more_set_headers  'Content-Type application/json';
           content_by_lua_block {
            require("jsonnet/init")()
          }
        }
        location /xml {
          more_set_headers  'Content-Type application/json';
          content_by_lua_block {
            require("xml/init")()
          }

        }
        location /test {
            rewrite_by_lua_block {
                ngx.ctx.foo = 76
            }
            access_by_lua_block {
                ngx.ctx.foo = ngx.ctx.foo + 3
            }
            content_by_lua_block {
               require("ctx/context")()
            }
        }
        location /set {
           set $token $http_Token;
           content_by_lua_block {
            require("set/init")()
          }
        }
        location /g {
           more_set_headers  'Content-Type application/json';
           content_by_lua_block {
            require("g/init")()
          }
        }
        location /scheme{
           content_by_lua_block {
            require("scheme/init")()
          }
        }
        location /cookie{
           content_by_lua_block {
            require("cookie/init")()
          }
        }
        location /vars {
           more_set_headers  'Content-Type application/json';
           content_by_lua_block {
            require("vars/vars")()
          }
        }
        location /ip {
           more_set_headers  'Content-Type application/json';
           content_by_lua_block {
             require("ip/remote")()
           }
        }
        location /post {
           more_set_headers  'Content-Type application/json';
           content_by_lua_block {
             ngx.req.read_body()
             require("body/post")()
           }
        }
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }
}
